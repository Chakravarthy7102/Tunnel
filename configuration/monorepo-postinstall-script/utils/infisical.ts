import { logger } from '@-/logger';
import { packageDirpaths } from '@-/packages-config';
import dotenv from 'dotenv';
import escapesh from 'escapesh';
import { execa } from 'execa';
import indentString from 'indent-string';
import fs from 'node:fs';
import { outdent } from 'outdent';
import path from 'pathe';

const envPaths = ['/', '/test-apps'];

export async function generateInfisicalDotenvFile() {
	try {
		const envOutputs = await Promise.all(envPaths.map(async (envPath) => {
			const { stdout } = await execa(
				'infisical',
				['export', '--format=dotenv', `--env=dev`, `--path=${envPath}`],
				{
					stdout: 'pipe',
					cwd: packageDirpaths.monorepo,
				},
			);

			return stdout;
		}));

		const envFileContents = envOutputs
			.flatMap((envOutput) => Object.entries(dotenv.parse(envOutput)))
			.sort(([key1], [key2]) => key1.localeCompare(key2))
			// direnv doesn't support multi-line environment variables using an
			// actual newline character, so we force all environment variables to
			// be on a single line
			.map(([key, value]) =>
				`${key}=${
					escapesh(
						value
							// Replace all literal '\n' sequences with '\\n'
							.replaceAll('\\n', '\\\\n')
							// Replace all actual newlines with '\n'
							.replaceAll('\n', '\\n'),
					)
				}`
			)
			.join('\n');

		await fs.promises.writeFile(
			path.join(
				packageDirpaths.monorepo,
				'.env',
			),
			outdent({ trimTrailingNewline: false })`
				# DO NOT MODIFY THIS FILE DIRECTLY
				# This file is generated by Infisical and secrets should be added/updated through the Infisical Dashboard
			` + envFileContents,
		);
	} catch (error) {
		logger.error('Error running infisical:', error);
		logger.info(
			'Make sure you have the infisical CLI installed and run `infisical login`',
		);
	}
}

export async function generateInfisicalVariablesDataFile() {
	const environmentVariables =
		(await Promise.all(envPaths.map(async (envPath) => {
			const { stdout } = await execa(
				'infisical',
				['export', '--format=json', `--env=dev`, `--path=${envPath}`],
				{
					stdout: 'pipe',
					cwd: packageDirpaths.monorepo,
				},
			);

			// eslint-disable-next-line no-restricted-properties -- Guaranteed to be valid JSON
			return JSON.parse(stdout);
		}))).flat();

	// dprint-ignore
	const variablesDataTs = outdent`
		// dprint-ignore-file

		/*
			DO NOT MODIFY THIS FILE DIRECTLY
			This file is generated by Infisical and secrets should be added/updated through the Infisical Dashboard
		*/

		export default {
		${
			environmentVariables.map(({ key }) => {
				return outdent`
					${key}: () => process.env.${key},
				`;
			}).sort().map(code => indentString(code, 1, { indent: '\t' })).join('\n')
			}
		}
	`;

	await fs.promises.writeFile(
		path.join(
			packageDirpaths.env,
			'data/variables.ts',
		),
		variablesDataTs,
	);
}

import { defineBinStub } from '#utils/define.ts';
import { getBinStubsDirpath } from '#utils/path.ts';

/**
	We modify the pkgx executable to set the PATH variable to prioritize our bin stubs to the passthrough command it runs
*/
export const pkgx = defineBinStub({
	commandName: 'pkgx',
	async getStub(args) {
		const binStubsDirpath = getBinStubsDirpath(args);

		return String.raw`#!/bin/sh

##########################################################################
# DO NOT EDIT DIRECTLY; this file is generated by \`bin-stubs/generate\` #
##########################################################################

# Store the args passed to \`pkgx\`
pkgx_args=$@

# Get all the possible interpretations of 'pkgx'
interpretations=$(type -a pkgx 2>/dev/null)

# Initialize a variable to store the path
pkgx_path=""

# Change IFS to split the string into lines
IFS=$'\n'
# Convert the multiline string into a list of lines
set -- $interpretations
# Restore the original IFS
IFS=" "

# Iterate over the lines
for line in "$@"; do
	# Check if the line indicates a file path
	case "$line" in
		"pkgx is "*)
			current_path="${'$'}{line#pkgx is }"
			# Check if the path does NOT end in '/__stubs__/pkgx'
			case "$current_path" in
				*/__stubs__/pkgx)
					: ;;  # Do nothing if it ends with '/__stubs__/pkgx'
				*)
					# If a valid path is found, store in 'path' and exit the loop
					pkgx_path="$current_path"
					break
					;;
			esac
			;;
	esac
done

# Add a "PATH=..." before pkgx's passthrough command
before_doubledash_args=""
passthrough_command=""
found_doubledash=false

# Iterate over the arguments
for arg in $pkgx_args; do
    if [ "$found_doubledash" = true ]; then
        # Append to passthrough_command
        if [ -z "$passthrough_command" ]; then
            passthrough_command="$arg"
        else
            passthrough_command="$passthrough_command $arg"
        fi
    else
        if [ "$arg" = "--" ]; then
            # Found the double-dash; switch to collecting the passthrough command
            found_doubledash=true
        else
            # Append to before_doubledash_args
            if [ -z "$before_doubledash_args" ]; then
                before_doubledash_args="$arg"
            else
                before_doubledash_args="$before_doubledash_args $arg"
            fi
        fi
    fi
done

if [ -n "$pkgx_path" ]; then
	if [ -n "$pkgx_args" ]; then
		if [ -n "$found_doubledash" ]; then
			command_with_path='PATH=${binStubsDirpath}:$PATH'
			command_with_path="$command_with_path $passthrough_command"
			"$pkgx_path" +env "$before_doubledash_args" -- env sh -c "eval $command_with_path"
		else
			"$pkgx_path" "$pkgx_args"
		fi
	else
		"$pkgx_path"
	fi
else
	echo "pkgx: command not found"
	exit 127
fi
`;
	},
});
